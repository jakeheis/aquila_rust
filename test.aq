// def add[T](lhs: T, rhs: T): T {
//     return rhs;
// }

// let num = add[int](3, 4);

// let str = add[ptr byte]("hi", "byte");

type Adder[T] {
    let lhs: T;
    let rhs: T;

    def pick(): T {
      return rhs;
    }
}

let a = Adder[int](3, 4);

let hi = a.pick();

let b = Adder[ptr byte]("hi", "byte");

let vector = Vec[int].new();
vector.insert(2);
vector.insert(4);

// print(vector);

// let a = 4 + 5;
// print a;

// let adder = Adder(1, 2);
// adder.sum(false, 4, a);

// while a > 6 {
//   print a;
//   a = a - 1;
// }

/*
enum Hello {
    case one;
    case two;
}

def fib(num: int): int {
  if num == 0 {
    return 0;
  }
  if num == 1 {
    return 1;
  }
  return fib(num - 2) + fib(num - 1);
}

print fib(1);
print;
print fib(3);
print;
print fib(5);
*/
