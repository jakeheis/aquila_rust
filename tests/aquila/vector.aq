let my_vec: Vec[int] = Vec[int].new();
my_vec.push(8);
my_vec.push(4);
my_vec.push(7);

/// -> 8
print(*my_vec.get(1) * 2);

/// -> 5
my_vec.replace(0, 5);
print(*my_vec.get(0));

/// -> 5
/// -> 4
/// -> 7
for num in my_vec {
    print(*num);
}

/// -> 7
print(my_vec.pop());
/// -> 4
print(my_vec.pop());

let vec_of_vecs: Vec[Vec[bool]] = Vec[Vec[bool]].new();
vec_of_vecs.push(Vec[bool].new());
vec_of_vecs.push(Vec[bool].new());

(*vec_of_vecs.get(1)).push(false);
(*vec_of_vecs.get(1)).push(true);

/// -> 1
print(*(*vec_of_vecs.get(1)).get(1));

/// -> 2
print(vec_of_vecs.count);

/// error
print(my_vec.element_size);
/// end
