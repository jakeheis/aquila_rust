trait Greets {
    def greet();
}

type Person {
    let nice: bool;
}

impl Person: Greets {
    def greet() {
        print("hello");
    }
}

let person = Person(true);

/// -> hello
person.greet();

def takes_greeter[T](greeter: T) where T: Greets {
    greeter.greet();
}

/// -> hello
takes_greeter(person);

def try_greet[T](obj: T) {
    #if T: Greets {
        takes_greeter(obj);
    }
}

try_greet(4);

/// -> hello
try_greet(person);

/// error
takes_greeter(4);
/// end
