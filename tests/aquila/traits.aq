trait Greets {
    def greet();
}

type Person {
    let nice: bool;
}

impl Person: Greets {
    def greet() {
        print("hello");
    }
}

let person = Person(true);

/// -> hello
person.greet();

def takes_greeter[T](greeter: T) where T: Greets {
    greeter.greet();
}

/// -> hello
takes_greeter[Person](person);

def try_greet[T](obj: T) {
    #if(T: Greets) {
        takes_greeter[T](obj);
    }
}

try_greet[int](4);

/// -> hello
try_greet[Person](person);

/// error
takes_greeter[int](4);
/// end
